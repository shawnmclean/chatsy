// Generated by CoffeeScript 1.3.1
(function() {
  var Manager, authService, exports;

  authService = require('./services/authorizeService').AuthorizeService;

  Manager = (function() {

    Manager.name = 'Manager';

    Manager.prototype.users = [];

    Manager.prototype.rooms = [];

    function Manager(io, options) {
      var self;
      this.io = io;
      this.options = options;
      console.log(authService);
      this.authService = this.options.AuthorizeService || authService;
      io = this.io;
      self = this;
      io.configure(function() {
        return io.of("/chat").authorization(function(handshakeData, callback) {
          return self.authService.canJoinServer(handshakeData, callback);
        }).on("connection", function(socket) {
          return socket.on('joinRoom', function(data) {
            return self.joinRoom(data, this);
          });
        });
      });
    }

    Manager.prototype.joinRoom = function(data, socket) {
      return this.authService.canJoinRoom(socket.handshake, data.roomId, function(canJoin) {
        if (canJoin) {
          return socket.emit("roomJoined", {
            roomId: data.roomId
          });
        }
      });
    };

    return Manager;

  })();

  exports = module.exports = Manager;

}).call(this);
